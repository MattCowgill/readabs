% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/abs_api.R
\name{abs_api}
\alias{abs_api}
\alias{abs_dataflows}
\alias{abs_data}
\alias{abs_datastructure}
\title{ABS API}
\usage{
abs_dataflows()

abs_data(
  id,
  datakey = "all",
  start_period = NULL,
  end_period = NULL,
  version = NULL
)

abs_datastructure(id)
}
\arguments{
\item{id}{A dataflow id, see `abs_dataflows()` for available dataflows.}

\item{datakey}{The key to filter data on. This must be provided in
dot-delimited format. Position in the string is important. See
`abs_datastructure()` for information about dimension position and values.}

\item{start_period}{The start period (used to filter on time). This is
  inclusive. The supported formats are:

  - YYYY for annual data (e.g. 2019)
  - YYYY-S[1-2] for semi-annual data (e.g. 2019-S1)
  - YYYY-Q[1-4] for quarterly data (e.g. 2019-Q1)
  - YYYY-MM[01-12] for monthly data (e.g. 2019-01)
  - YYYY-W[01-53] for weekly data (e.g. 2019-W01)
  - YYYY-MM-DD for daily and business data (e.g. 2019-01-01)}

\item{end_period}{The end period (used to filter on time). This is inclusive.
The supported formats are the same as for `start_period`}

\item{version}{A version number, if unspecified the latest version of the
dataset is used. See `abs_dataflows()` for available dataflow versions.}
}
\value{
A data.frame
}
\description{
These functions provide a minimal interface to the ABS API.
}
\details{
- Using `abs_dataflows()` you can get information on the dataflows available
  - Using `abs_datastructure()` you can get metadata relating to a specific dataflow
  - Using `abs_data()` you can get the data belonging to a given dataflow.
  Note that the API enforces a reasonably strict gateway timeout policy. This
  means that, if you're trying to access a reasonably large dataset, you will
  need to filter it on the server side using the `datakey`.

More information can be found on the [ABS website](https://www.abs.gov.au/about/data-services/application-programming-interfaces-apis/data-api-user-guide/using-api)
}
\examples{

# List available flows
abs_dataflows()

# Get full data set for a given flow by providing id and start period:
abs_data("ERP_COB", start_period = 2020)

# The `ABS_C16_T10_SA` dataflow is very large, so the gateway will timeout if we
# try to collect the full data set
try(abs_data("ABS_C16_T10_SA"))

# We need to go for a subset using a datakey, which will be a dot-delimited
# query string. To figure out how to build the datakey, we get metadata
x <- abs_datastructure("ABS_C16_T10_SA")

# The `ASGS_2016` dimension is at position 5 and `ASGS_2016=0` is the code for
# 'Australia'
x[x$var=="ASGS_2016" & x$label == "Australia", ]

# The `SEX_ABS` dimension is at position 1 and `SEX_ABS=3` is the code for
# 'Persons' (i.e. all persons)
x[x$var=="SEX_ABS" & x$label == "Persons", ]

# So we build a datakey putting 3 in the first and 0 in the fifth position to get filtered data
y <- abs_data("ABS_C16_T10_SA", datakey = "3....0.", )
unique(y["ASGS_2016"]) # Confirming only 'Australia' level records came through
unique(y["SEX_ABS"]) # Confirming only 'Australia' level records came through

}
